[{"/home/timothy/WebstormProjects/07-new-starting-project/src/index.js":"1","/home/timothy/WebstormProjects/07-new-starting-project/src/App.js":"2","/home/timothy/WebstormProjects/07-new-starting-project/src/pages/Pokemons.js":"3","/home/timothy/WebstormProjects/07-new-starting-project/src/pages/axolotl.js":"4","/home/timothy/WebstormProjects/07-new-starting-project/src/pages/home.js":"5","/home/timothy/WebstormProjects/07-new-starting-project/src/components/layout/Navigation.js":"6","/home/timothy/WebstormProjects/07-new-starting-project/src/assets/IMAGES.js":"7","/home/timothy/WebstormProjects/07-new-starting-project/src/components/ui/TutorialCard.js":"8","/home/timothy/WebstormProjects/07-new-starting-project/src/components/layout/Layout.js":"9","/home/timothy/WebstormProjects/07-new-starting-project/src/components/Form/HomeForm.js":"10","/home/timothy/WebstormProjects/07-new-starting-project/src/components/api/firebaseService.js":"11"},{"size":264,"mtime":1635123368437,"results":"12","hashOfConfig":"13"},{"size":918,"mtime":1635119235864,"results":"14","hashOfConfig":"13"},{"size":127,"mtime":1634481425794,"results":"15","hashOfConfig":"13"},{"size":1789,"mtime":1634494682937,"results":"16","hashOfConfig":"13"},{"size":518,"mtime":1635349289762,"results":"17","hashOfConfig":"13"},{"size":1452,"mtime":1634497340750,"results":"18","hashOfConfig":"13"},{"size":2678,"mtime":1634494205595,"results":"19","hashOfConfig":"13"},{"size":97,"mtime":1634497739020,"results":"20","hashOfConfig":"13"},{"size":179,"mtime":1634498041428,"results":"21","hashOfConfig":"13"},{"size":5516,"mtime":1635252604206,"results":"22","hashOfConfig":"13"},{"size":983,"mtime":1635252524587,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"ilyxxc",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/home/timothy/WebstormProjects/07-new-starting-project/src/index.js",[],["50","51"],"/home/timothy/WebstormProjects/07-new-starting-project/src/App.js",[],"/home/timothy/WebstormProjects/07-new-starting-project/src/pages/Pokemons.js",[],"/home/timothy/WebstormProjects/07-new-starting-project/src/pages/axolotl.js",["52"],"import React, { useState } from \"react\";\nimport { images } from \"../assets/IMAGES\";\nimport { Button, Card, Col, Image, Row } from \"react-bootstrap\";\nimport loveIcon from \"../assets/icons/loveIcon.svg\";\nimport trashIcon from \"../assets/icons/trashIcon.svg\";\n\nfunction CardFooterContent() {\n  const [likes, setLikes] = useState(0);\n  const [dislikes, setDislikes] = useState(0);\n\n  return (\n    <Row>\n      <Col>\n        <Button variant=\"light\" onClick={() => setLikes(likes + 1)}>\n          <Image src={loveIcon} thumbnail />\n        </Button>\n      </Col>\n      <Col xs={2}>\n        <h1>{likes}</h1>\n      </Col>\n      <Col xs={2}>\n        <h1>{dislikes}</h1>\n      </Col>\n      <Col>\n        <Button variant=\"light\" onClick={() => setDislikes(dislikes + 1)}>\n          <Image src={trashIcon} thumbnail />\n        </Button>\n      </Col>\n    </Row>\n  );\n}\n\nfunction CardContent(props) {\n  const [cardInfo, setCardInfo] = useState(props.card);\n\n  return (\n    <Col>\n      <Card style={{ width: \"250px\" }}>\n        <Card.Img\n          style={{ height: \"200px\", width: \"200px\" }}\n          variant=\"top\"\n          src={cardInfo.source}\n        />\n        <Card.Body>\n          <Card.Title>{cardInfo.description}</Card.Title>\n        </Card.Body>\n        <CardFooterContent></CardFooterContent>\n      </Card>\n    </Col>\n  );\n}\n\nclass TableContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tableColums: 4,\n      cards: images,\n      rowNumber: 0,\n    };\n  }\n\n  render() {\n    return (\n      <Row xs={2} md={4}>\n        {this.state.cards.map((value, index) => {\n          return <CardContent key={value.id} card={value} />;\n        })}\n      </Row>\n    );\n  }\n}\n\nfunction AxolotlPage() {\n  return <TableContent />;\n}\n\nexport default AxolotlPage;\n","/home/timothy/WebstormProjects/07-new-starting-project/src/pages/home.js",[],"/home/timothy/WebstormProjects/07-new-starting-project/src/components/layout/Navigation.js",["53"],"import { Container, Nav, Navbar, NavDropdown } from \"react-bootstrap\";\nimport { useState } from \"react\";\n\nconst videos = [\n  { title: \"Tyrion\", link: \"https://www.youtube.com/watch?v=H9HFigfkKHA\" },\n  { title: \"Euron\", link: \"https://www.youtube.com/watch?v=sbX_ak0N1EI\" },\n  { title: \"Cersei\", link: \"https://www.youtube.com/watch?v=K5TX2aLdB4s\" },\n  { title: \"Summerhall\", link: \"https://www.youtube.com/watch?v=85P2-4NZqLM\" },\n];\n\nfunction Dropdown(props) {\n  const [videos, setVideos] = useState(props.videos);\n  const videoItems = videos.map((video) => (\n    <NavDropdown.Item key={video.link} href={video.link} target=\"blank\">\n      {video.title}\n    </NavDropdown.Item>\n  ));\n  return videoItems;\n}\n\nfunction Navigation() {\n  return (\n    <header>\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand href=\"/\">React Solidity</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav>\n              <Nav.Link href=\"/\">Home</Nav.Link>\n              <Nav.Link href=\"/axolotl\">Axolotl</Nav.Link>\n              <Nav.Link href=\"/pokemon\">Pokemon</Nav.Link>\n              <NavDropdown id=\"basic-nav-dropdown\" title=\"Alt Shift X\">\n                <Dropdown videos={videos} />\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n}\n\nexport default Navigation;\n","/home/timothy/WebstormProjects/07-new-starting-project/src/assets/IMAGES.js",[],"/home/timothy/WebstormProjects/07-new-starting-project/src/components/ui/TutorialCard.js",[],"/home/timothy/WebstormProjects/07-new-starting-project/src/components/layout/Layout.js",[],"/home/timothy/WebstormProjects/07-new-starting-project/src/components/Form/HomeForm.js",["54"],"import { Button, Card, Col, Container, Row } from \"react-bootstrap\";\nimport Form from \"react-bootstrap/Form\";\nimport { useEffect, useRef, useState } from \"react\";\nimport React from \"react\";\nimport { useApi } from \"../api/firebaseService\";\n\nfunction ItemPreview(props) {\n  const { uploadCard } = useApi();\n  const sendToFirebase = async () => {\n    const result = await uploadCard(props.cardInfo);\n    console.log(\"Got the result\", result);\n  };\n\n  console.log(\"CardsObtained\", props.cardInfo);\n\n  return (\n    <Card>\n      <Card.Img variant=\"top\" src={props.cardInfo.image} />\n      <Card.Body>\n        <Card.Title>{props.cardInfo.title}</Card.Title>\n        <Card.Subtitle>{props.cardInfo.category}</Card.Subtitle>\n        <Card.Subtitle>{props.cardInfo.price}</Card.Subtitle>\n        <Card.Text>{props.cardInfo.description}</Card.Text>\n        {props.display && (\n          <Button variant=\"primary\" onClick={sendToFirebase}>\n            Submit\n          </Button>\n        )}\n      </Card.Body>\n    </Card>\n  );\n}\n\nfunction ItemForm(props) {\n  const titleInputRef = useRef(props.titleInputRef);\n  const priceInputRef = useRef(props.priceInputRef);\n  const descriptionInputRef = useRef(props.descriptionInputRef);\n  const imageInputRef = useRef(props.imageInputRef);\n  const categoryInputRef = useRef(props.categoryInputRef);\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    const enteredTitle = titleInputRef.current.value;\n    const enteredPrice = priceInputRef.current.value;\n    const enteredDescription = descriptionInputRef.current.value;\n    const enteredImage = imageInputRef.current.files[0];\n    const enteredCategory = categoryInputRef.current.value;\n    const Item = {\n      title: enteredTitle,\n      price: enteredPrice,\n      description: enteredDescription,\n      image: URL.createObjectURL(enteredImage),\n      category: enteredCategory,\n    };\n\n    props.parentCallback(Item);\n  }\n\n  function resetHandler(event) {\n    event.preventDefault();\n\n    titleInputRef.current.value = null;\n    priceInputRef.current.value = null;\n    descriptionInputRef.current.value = null;\n    imageInputRef.current.value = null;\n    categoryInputRef.current.value = null;\n\n    props.parentCallback(null);\n  }\n\n  return (\n    <Form onSubmit={submitHandler}>\n      <Form.Group className=\"mb-3\" controlId=\"formTitle\">\n        <Form.Label> Title </Form.Label>\n        <Form.Control type=\"text\" placeholder=\". . . \" ref={titleInputRef} />\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"formPrice\">\n        <Form.Label> Price </Form.Label>\n        <Form.Control\n          type=\"number\"\n          step=\".01\"\n          placeholder=\"0.00\"\n          ref={priceInputRef}\n        />\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"formDescription\">\n        <Form.Label> Description </Form.Label>\n        <Form.Control as=\"textarea\" rows={3} ref={descriptionInputRef} />\n      </Form.Group>\n      <Form.Group controlId=\"formFile\" className=\"mb-3\">\n        <Form.Label>Insert image JPEG or PNG</Form.Label>\n        <Form.Control type=\"file\" ref={imageInputRef} />\n      </Form.Group>\n      <Form.Group controlId=\"categorySelect\" className=\"mb-3\">\n        <Form.Label> Select Category </Form.Label>\n        <Form.Select aria-label=\"Default select example\" ref={categoryInputRef}>\n          <option> </option>\n          <option value=\"Animal\">Animal</option>\n          <option value=\"Human\">Human</option>\n          <option value=\"Machine\">Machine</option>\n        </Form.Select>\n      </Form.Group>\n      <Row>\n        <Col>\n          <Button\n            style={{ marginRight: \"4px\" }}\n            variant=\"primary\"\n            type=\"submit\"\n          >\n            Preview\n          </Button>\n        </Col>\n        <Col>\n          <Button variant=\"danger\" type=\"reset\" onClick={resetHandler}>\n            Reset\n          </Button>\n        </Col>\n      </Row>\n    </Form>\n  );\n}\n\nfunction HomeForm() {\n  const { getCards } = useApi();\n\n  const [existingCards, setExistingCards] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n\n  const getExistingCards = async () => {\n    const result = await getCards();\n    setExistingCards(result);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    getExistingCards();\n  }, []);\n\n  const titleInputRef = useRef();\n  const priceInputRef = useRef();\n  const descriptionInputRef = useRef();\n  const imageInputRef = useRef();\n  const categoryInputRef = useRef();\n  const [previewReady, setPreviewReady] = useState(false);\n  const [previewData, setPreviewData] = useState();\n\n  function handleCallback(childFormData) {\n    setPreviewReady(!!childFormData);\n    setPreviewData(childFormData);\n  }\n\n  return (\n    <Container fluid>\n      <Row>\n        {previewReady && (\n          <Col>\n            <ItemPreview cardInfo={previewData} display={true} />\n          </Col>\n        )}\n\n        <Col>\n          <ItemForm\n            titleInputRef={titleInputRef}\n            priceInputRef={priceInputRef}\n            descriptionInputRef={descriptionInputRef}\n            imageInputRef={imageInputRef}\n            categoryInputRef={categoryInputRef}\n            parentCallback={handleCallback}\n          />\n        </Col>\n      </Row>\n      {!isLoading && (\n        <Row xs={2} md={4}>\n          {existingCards.map((value, index) => {\n            return <ItemPreview key={index} cardInfo={value} display={false} />;\n          })}\n        </Row>\n      )}\n    </Container>\n  );\n}\n\nexport default HomeForm;\n","/home/timothy/WebstormProjects/07-new-starting-project/src/components/api/firebaseService.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":34,"column":20,"nodeType":"61","messageId":"62","endLine":34,"endColumn":31},{"ruleId":"59","severity":1,"message":"63","line":12,"column":18,"nodeType":"61","messageId":"62","endLine":12,"endColumn":27},{"ruleId":"64","severity":1,"message":"65","line":139,"column":6,"nodeType":"66","endLine":139,"endColumn":8,"suggestions":"67"},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'setCardInfo' is assigned a value but never used.","Identifier","unusedVar","'setVideos' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getExistingCards'. Either include it or remove the dependency array.","ArrayExpression",["70"],"no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},"Update the dependencies array to be: [getExistingCards]",{"range":"73","text":"74"},[4299,4301],"[getExistingCards]"]